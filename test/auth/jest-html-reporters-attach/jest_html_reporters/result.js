window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":6,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":6,"startTime":1713752825651,"success":false,"testResults":[{"numFailingTests":6,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1713752835484,"runtime":9513,"slow":true,"start":1713752825971},"testFilePath":"D:\\Back-End Traning\\BaseCamp-BE\\back-end\\test\\unit-test-auth\\auth.controller.spec.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAuthService › signIn › should throw NotFoundException if email does not exist\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ShutdownService is a provider, is it part of the current RootTestModule?\n    - If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ShutdownService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m     beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 17 |\u001b[39m         \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m             providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m                 \u001b[33mAuthService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m                 \u001b[33mUsersService\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 6)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit-test-auth/auth.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:17:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAuthService › signIn › should throw UnauthorizedException if password is incorrect\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ShutdownService is a provider, is it part of the current RootTestModule?\n    - If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ShutdownService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m     beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 17 |\u001b[39m         \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m             providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m                 \u001b[33mAuthService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m                 \u001b[33mUsersService\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 6)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit-test-auth/auth.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:17:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAuthService › signIn › should return tokens if credentials are correct\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ShutdownService is a provider, is it part of the current RootTestModule?\n    - If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ShutdownService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m     beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 17 |\u001b[39m         \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m             providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m                 \u001b[33mAuthService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m                 \u001b[33mUsersService\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 6)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit-test-auth/auth.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:17:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAuthService › refreshTokens › should throw ForbiddenException if user or hashed refresh token does not exist\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ShutdownService is a provider, is it part of the current RootTestModule?\n    - If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ShutdownService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m     beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 17 |\u001b[39m         \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m             providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m                 \u001b[33mAuthService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m                 \u001b[33mUsersService\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 6)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit-test-auth/auth.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:17:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAuthService › refreshTokens › should throw ForbiddenException if provided refresh token does not match stored hash\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ShutdownService is a provider, is it part of the current RootTestModule?\n    - If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ShutdownService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m     beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 17 |\u001b[39m         \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m             providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m                 \u001b[33mAuthService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m                 \u001b[33mUsersService\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 6)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit-test-auth/auth.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:17:39)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAuthService › refreshTokens › should return new tokens if refresh token matches stored hash\u001b[39m\u001b[22m\n\n    Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\n    Potential solutions:\n    - Is RootTestModule a valid NestJS module?\n    - If ShutdownService is a provider, is it part of the current RootTestModule?\n    - If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n      @Module({\n        imports: [ /* the Module containing ShutdownService */ ]\n      })\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 15 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m     beforeEach(\u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 17 |\u001b[39m         \u001b[36mconst\u001b[39m module\u001b[33m:\u001b[39m \u001b[33mTestingModule\u001b[39m \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m \u001b[33mTest\u001b[39m\u001b[33m.\u001b[39mcreateTestingModule({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m             providers\u001b[33m:\u001b[39m [\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m                 \u001b[33mAuthService\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m                 \u001b[33mUsersService\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.lookupComponentInParentModules (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:254:19)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:207:33)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveComponentInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-injector.js\u001b[2m:19:45)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat resolveParam (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:128:38)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 0)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.resolveConstructorParams (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:143:27)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadInstance (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:70:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInjector.loadProvider (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/injector.js\u001b[2m:97:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:56:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 6)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfProviders (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:55:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:40:13\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at async Promise.all (index 1)\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstances (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:39:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/core/injector/instance-loader.js\u001b[2m:22:13)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingInstanceLoader.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-instance-loader.js\u001b[2m:9:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.createInstancesOfDependencies (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:118:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat TestingModuleBuilder.compile (\u001b[22m\u001b[2mnode_modules/@nestjs/testing/testing-module.builder.js\u001b[2m:74:9)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/unit-test-auth/auth.controller.spec.ts\u001b[39m\u001b[0m\u001b[2m:17:39)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["AuthService","signIn"],"duration":36,"failureMessages":["Error: Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ShutdownService is a provider, is it part of the current RootTestModule?\n- If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ShutdownService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 6)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\test\\unit-test-auth\\auth.controller.spec.ts:17:39)"],"fullName":"AuthService signIn should throw NotFoundException if email does not exist","status":"failed","title":"should throw NotFoundException if email does not exist"},{"ancestorTitles":["AuthService","signIn"],"duration":6,"failureMessages":["Error: Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ShutdownService is a provider, is it part of the current RootTestModule?\n- If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ShutdownService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 6)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\test\\unit-test-auth\\auth.controller.spec.ts:17:39)"],"fullName":"AuthService signIn should throw UnauthorizedException if password is incorrect","status":"failed","title":"should throw UnauthorizedException if password is incorrect"},{"ancestorTitles":["AuthService","signIn"],"duration":4,"failureMessages":["Error: Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ShutdownService is a provider, is it part of the current RootTestModule?\n- If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ShutdownService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 6)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\test\\unit-test-auth\\auth.controller.spec.ts:17:39)"],"fullName":"AuthService signIn should return tokens if credentials are correct","status":"failed","title":"should return tokens if credentials are correct"},{"ancestorTitles":["AuthService","refreshTokens"],"duration":4,"failureMessages":["Error: Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ShutdownService is a provider, is it part of the current RootTestModule?\n- If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ShutdownService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 6)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\test\\unit-test-auth\\auth.controller.spec.ts:17:39)"],"fullName":"AuthService refreshTokens should throw ForbiddenException if user or hashed refresh token does not exist","status":"failed","title":"should throw ForbiddenException if user or hashed refresh token does not exist"},{"ancestorTitles":["AuthService","refreshTokens"],"duration":3,"failureMessages":["Error: Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ShutdownService is a provider, is it part of the current RootTestModule?\n- If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ShutdownService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 6)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\test\\unit-test-auth\\auth.controller.spec.ts:17:39)"],"fullName":"AuthService refreshTokens should throw ForbiddenException if provided refresh token does not match stored hash","status":"failed","title":"should throw ForbiddenException if provided refresh token does not match stored hash"},{"ancestorTitles":["AuthService","refreshTokens"],"duration":3,"failureMessages":["Error: Nest can't resolve dependencies of the PrismaService (?). Please make sure that the argument ShutdownService at index [0] is available in the RootTestModule context.\n\nPotential solutions:\n- Is RootTestModule a valid NestJS module?\n- If ShutdownService is a provider, is it part of the current RootTestModule?\n- If ShutdownService is exported from a separate @Module, is that module imported within RootTestModule?\n  @Module({\n    imports: [ /* the Module containing ShutdownService */ ]\n  })\n\n    at TestingInjector.lookupComponentInParentModules (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:254:19)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:207:33)\n    at TestingInjector.resolveComponentInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-injector.js:19:45)\n    at resolveParam (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:128:38)\n    at async Promise.all (index 0)\n    at TestingInjector.resolveConstructorParams (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:143:27)\n    at TestingInjector.loadInstance (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:70:13)\n    at TestingInjector.loadProvider (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\injector.js:97:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:56:13\n    at async Promise.all (index 6)\n    at TestingInstanceLoader.createInstancesOfProviders (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:55:9)\n    at D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:40:13\n    at async Promise.all (index 1)\n    at TestingInstanceLoader.createInstances (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:39:9)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\core\\injector\\instance-loader.js:22:13)\n    at TestingInstanceLoader.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-instance-loader.js:9:9)\n    at TestingModuleBuilder.createInstancesOfDependencies (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:118:9)\n    at TestingModuleBuilder.compile (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@nestjs\\testing\\testing-module.builder.js:74:9)\n    at Object.<anonymous> (D:\\Back-End Traning\\BaseCamp-BE\\back-end\\test\\unit-test-auth\\auth.controller.spec.ts:17:39)"],"fullName":"AuthService refreshTokens should return new tokens if refresh token matches stored hash","status":"failed","title":"should return new tokens if refresh token matches stored hash"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":["src/**/*.ts","!src/**/*.spec.ts","!src/main.ts","!src/**/index.ts"],"coverageDirectory":"D:\\Back-End Traning\\BaseCamp-BE\\back-end\\coverage","coverageProvider":"v8","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":["auth.controller.spec.ts"],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\jest-html-reporters\\index.js",{}]],"rootDir":"D:\\Back-End Traning\\BaseCamp-BE\\back-end","runTestsByPath":false,"seed":-994941539,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"auth.controller.spec.ts","testSequencer":"D:\\Back-End Traning\\BaseCamp-BE\\back-end\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"..\\..\\coverage\\lcov-report\\index.html"},"endTime":1713752835620,"_reporterOptions":{"publicPath":"D:\\Back-End Traning\\BaseCamp-BE\\back-end\\test\\unit-test-auth","filename":"jest_html_reporters.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})